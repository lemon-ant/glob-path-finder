name: 01-Build Artifacts

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-baseline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 21 (baseline)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Build once
        run: mvn -B -ntp -Dci=true clean verify

      - name: Attach sources & javadoc
        run: mvn -B -ntp -Dci=true -DskipTests -Dskip-quality-gates=true -Ddoclint=none source:jar javadoc:jar

      - name: Stage dist/ and deps/ and original POM
        run: |
          mkdir -p dist deps
          # Stage built jars
          cp target/*.jar dist/
          # Stage original POM for later deploy
          cp pom.xml dist/pom.xml
          # Stage runtime dependencies to deps/
          mvn -q -DincludeScope=runtime -DoutputDirectory=deps dependency:copy-dependencies
          echo "Dist:" && ls -l dist || true
          echo "Deps:" && ls -l deps || true

      - name: Create and compile consumer Runner
        run: |
          mkdir -p runner
          cat > runner/Runner.java <<'JAVA'
          import java.nio.file.*; import java.util.*; import java.util.stream.*;
          import io.github.lemon_ant.globpathfinder.GlobPathFinder;
          import io.github.lemon_ant.globpathfinder.PathQuery;
          public class Runner {
            public static void main(String[] args) {
              PathQuery q = PathQuery.builder()
                .baseDir(Paths.get(".")) .includeGlobs(Set.of("**/*"))
                .excludeGlobs(Set.of()) .allowedExtensions(Set.of())
                .onlyFiles(false) .maxDepth(Integer.MAX_VALUE).build();
              try (Stream<Path> s = GlobPathFinder.findPaths(q)) {
                System.out.println("OK " + s.limit(1).count());
              }
            }
          }
          JAVA
          MAIN_JAR=$(ls dist/*.jar | grep -v -- '-sources.jar' | grep -v -- '-javadoc.jar' | head -n1)
          javac -cp "$MAIN_JAR:deps/*:runner" -d runner runner/Runner.java
          echo "Runner compiled:" && ls -l runner || true

      - name: Upload dist (jar + sources + javadoc + pom.xml)
        uses: actions/upload-artifact@v4
        with:
          name: gpf-dist
          path: dist/*
          if-no-files-found: error

      - name: Upload runtime deps
        uses: actions/upload-artifact@v4
        with:
          name: gpf-deps-runtime
          path: deps/*
          if-no-files-found: error

      - name: Upload precompiled runner classes
        uses: actions/upload-artifact@v4
        with:
          name: gpf-runner
          path: runner/*
          if-no-files-found: error
