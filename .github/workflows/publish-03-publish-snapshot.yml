name: 03-Publish Snapshot

on:
  workflow_run:
    workflows: ["02-Compatibility Test"]
    types: [ completed ]

permissions:
  contents: read
  actions: read
  packages: write

jobs:
  deploy:
    # Triggered by 02; require success only.
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      # Resolve run_id of 01 by head_sha + workflow name, then download its artifacts.
      - name: Resolve run_id of "01-Build Artifacts" for this SHA
        id: find_build_run
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SHA=${{ github.event.workflow_run.head_sha }}
          RID=$(gh run list -R ${{ github.repository }} \
            -w "01-Build Artifacts" \
            --json databaseId,headSha,conclusion,createdAt \
            --jq '. | sort_by(.createdAt) | reverse | map(select(.headSha=="'"$SHA"'" and .conclusion=="success"))[0].databaseId')
          if [ -z "$RID" ] || [ "$RID" = "null" ]; then
            echo "No successful '01-Build Artifacts' run found for commit $SHA"; exit 1;
          fi
          echo "rid=$RID" >> "$GITHUB_OUTPUT"

      - name: Download dist from 01 (exact run_id)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p dist
          gh run download "${{ steps.find_build_run.outputs.rid }}" \
            -R ${{ github.repository }} \
            --name "gpf-dist" --dir dist
          ls -l dist

      - name: Pick files
        id: pick
        run: |
          MAIN=$(ls dist/*.jar | grep -v -- '-sources.jar' | grep -v -- '-javadoc.jar' | head -n1)
          SRC=$(ls dist/*-sources.jar | head -n1 || true)
          DOC=$(ls dist/*-javadoc.jar | head -n1 || true)
          echo "main=$MAIN" >> "$GITHUB_OUTPUT"
          echo "src=$SRC"   >> "$GITHUB_OUTPUT"
          echo "doc=$DOC"   >> "$GITHUB_OUTPUT"

      - name: Set up Java 21 (deploy env)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Deploy EXACT artifacts using original POM from dist/
        run: |
          EXTRA_FILES=""
          EXTRA_CLASSIFIERS=""
          EXTRA_TYPES=""
          if [ -f "${{ steps.pick.outputs.src }}" ]; then
            EXTRA_FILES="${{ steps.pick.outputs.src }}"
            EXTRA_CLASSIFIERS="sources"
            EXTRA_TYPES="jar"
          fi
          if [ -f "${{ steps.pick.outputs.doc }}" ]; then
            if [ -n "$EXTRA_FILES" ]; then
              EXTRA_FILES="$EXTRA_FILES,${{ steps.pick.outputs.doc }}"
              EXTRA_CLASSIFIERS="$EXTRA_CLASSIFIERS,javadoc"
              EXTRA_TYPES="$EXTRA_TYPES,jar"
            else
              EXTRA_FILES="${{ steps.pick.outputs.doc }}"
              EXTRA_CLASSIFIERS="javadoc"
              EXTRA_TYPES="jar"
            fi
          fi

          mvn -B -ntp -s .github/maven-settings.xml deploy:deploy-file \
            -DrepositoryId=github \
            -Durl="https://maven.pkg.github.com/lemon-ant/glob-path-finder" \
            -DpomFile=dist/pom.xml \
            -Dfile="${{ steps.pick.outputs.main }}" \
            -Dfiles="$EXTRA_FILES" \
            -Dclassifiers="$EXTRA_CLASSIFIERS" \
            -Dtypes="$EXTRA_TYPES"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
