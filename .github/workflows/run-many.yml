name: LemonAnt Snapshot Deploy (build-once → run-many → publish-same-jar)

on:
  push:
    branches: [ main ]
    paths:
      - '**.java'
      - '**/pom.xml'
      - '**/src/**/resources/**'
      - '.github/workflows/*.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

jobs:
  # 1) Собираем JAR один раз (baseline), без тяжёлых гейтов
  build-baseline:
    name: Build baseline JAR (one compile)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java 17 (baseline compile; bytecode=11 via pom)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Build once (light)
        run: mvn -B -ntp -Dci=true -Dskip-quality-gates=true clean verify

      - name: Upload built JAR
        uses: actions/upload-artifact@v4
        with:
          name: gpf-jar
          path: target/*.jar
          if-no-files-found: error

  # 2) Параллельно проверяем РАНТАЙМ (используя готовый JAR + его deps)
  compat-matrix:
    name: Runtime compat — JDK ${{ matrix.java }} / ${{ matrix.vendor }}
    needs: build-baseline
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { vendor: temurin,   java: 11 }
          - { vendor: temurin,   java: 17 }
          - { vendor: temurin,   java: 21 }
          - { vendor: temurin,   java: 23 }   # 23 есть у Temurin
          - { vendor: microsoft, java: 11 }
          - { vendor: microsoft, java: 17 }
          - { vendor: microsoft, java: 21 }   # у MS 23 нет
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built JAR
        uses: actions/download-artifact@v4
        with:
          name: gpf-jar
          path: artifact

      - name: Pick JAR path
        id: pick
        run: echo "jar=$(ls artifact/*.jar | head -n1)" >> $GITHUB_OUTPUT

      - name: Set up Java ${{ matrix.java }} (${{ matrix.vendor }})
        uses: actions/setup-java@v4
        with:
          distribution: ${{ matrix.vendor }}
          java-version: ${{ matrix.java }}
          cache: maven

      - name: Show java -version
        run: java -version

      - name: Copy runtime dependencies to ./deps
        run: mvn -q -DincludeScope=runtime -DoutputDirectory=deps dependency:copy-dependencies

      - name: Compile smoke consumer (against lib JAR + deps)
        run: |
          cat > Runner.java <<'JAVA'
          import java.nio.file.*; import java.util.*; import java.util.stream.*;
          import io.github.lemon_ant.globpathfinder.GlobPathFinder;
          import io.github.lemon_ant.globpathfinder.PathQuery;
          public class Runner {
            public static void main(String[] args) {
              PathQuery q = PathQuery.builder()
                  .baseDir(Paths.get("."))
                  .includeGlobs(Set.of("**/*"))
                  .excludeGlobs(Set.of())
                  .allowedExtensions(Set.of())
                  .onlyFiles(false)
                  .maxDepth(Integer.MAX_VALUE)
                  .build();
              try (Stream<Path> s = GlobPathFinder.findPaths(q)) {
                System.out.println("OK " + s.limit(1).count());
              }
            }
          }
          JAVA
          javac -cp "${{ steps.pick.outputs.jar }}:deps/*:." Runner.java

      - name: Run smoke on this JVM
        run: java -cp "${{ steps.pick.outputs.jar }}:deps/*:." Runner

  # 3) Публикуем ИМЕННО ТОТ JAR; если compat упал — публикации нет
  deploy:
    name: Publish snapshot to GitHub Packages (publish same JAR)
    needs: compat-matrix
    if: ${{ success() }}      # блок: не публикуем при падении матрицы
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built JAR
        uses: actions/download-artifact@v4
        with:
          name: gpf-jar
          path: artifact

      - name: Pick JAR path
        id: pick
        run: echo "jar=$(ls artifact/*.jar | head -n1)" >> $GITHUB_OUTPUT

      - name: Set up Java 21 (same as your working job)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Read project version (no build)
        id: version
        run: |
          VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Deploy EXACTLY this JAR (no rebuild)
        run: |
          mvn -B -ntp -s .github/maven-settings.xml deploy:deploy-file \
            -Dfile="${{ steps.pick.outputs.jar }}" \
            -DrepositoryId=github \
            -Durl="https://maven.pkg.github.com/lemon-ant/glob-path-finder" \
            -DgroupId=io.github.lemon-ant \
            -DartifactId=glob-path-finder \
            -Dversion="${{ steps.version.outputs.version }}" \
            -Dpackaging=jar \
            -DpomFile=pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
